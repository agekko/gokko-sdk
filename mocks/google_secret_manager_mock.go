// Code generated by MockGen. DO NOT EDIT.
// Source: agekko/gokko-sdk (interfaces: SecretGetterInterface)

// Package mock_gokko_sdk is a generated GoMock package.
package gokko_mock

import (
	context "context"
    reflect "reflect"

	gomock "github.com/golang/mock/gomock"
    gax "github.com/googleapis/gax-go/v2"
	secretmanagerpb "google.golang.org/genproto/googleapis/cloud/secretmanager/v1"

    gokko "github.com/agekko/gokko-sdk"
)

// MockSecretGetterInterface is a mock of SecretGetterInterface interface.
type MockSecretGetterInterface struct {
    ctrl     *gomock.Controller
    recorder *MockSecretGetterInterfaceMockRecorder
}

// MockSecretGetterInterfaceMockRecorder is the mock recorder for MockSecretGetterInterface.
type MockSecretGetterInterfaceMockRecorder struct {
    mock *MockSecretGetterInterface
}

type MockSecretManagerClient struct {
    Value string
}

func (m *MockSecretManagerClient) Close() error {
    return nil
}

func (m *MockSecretManagerClient) AccessSecretVersion (
    ctx context.Context,
    _ *secretmanagerpb.AccessSecretVersionRequest,
    _ ...gax.CallOption,
) (
    *secretmanagerpb.AccessSecretVersionResponse,
    error,
) {
    return &secretmanagerpb.AccessSecretVersionResponse{
        Payload: &secretmanagerpb.SecretPayload{
            Data: []byte(m.Value),
        },
    }, nil
}

// NewMockSecretGetterInterface creates a new mock instance.
func NewMockSecretGetterInterface(ctrl *gomock.Controller) *MockSecretGetterInterface {
    mock := &MockSecretGetterInterface{ctrl: ctrl}
    mock.recorder = &MockSecretGetterInterfaceMockRecorder{mock}
    return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSecretGetterInterface) EXPECT() *MockSecretGetterInterfaceMockRecorder {
    return m.recorder
}

// GetClientAndContext mocks base method.
func (m *MockSecretGetterInterface) GetClientAndContext() (gokko.GoogleSecretManagerClientInterface, context.Context) {
    m.ctrl.T.Helper()
    ret := m.ctrl.Call(m, "GetClientAndContext")
    ret0, _ := ret[0].(gokko.GoogleSecretManagerClientInterface)
    ret1, _ := ret[1].(context.Context)
    return ret0, ret1
}

// GetClientAndContext indicates an expected call of GetClientAndContext.
func (mr *MockSecretGetterInterfaceMockRecorder) GetClientAndContext() *gomock.Call {
    mr.mock.ctrl.T.Helper()
    return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientAndContext", reflect.TypeOf((*MockSecretGetterInterface)(nil).GetClientAndContext))
}

// GetKey mocks base method.
func (m *MockSecretGetterInterface) GetKey() string {
    m.ctrl.T.Helper()
    ret := m.ctrl.Call(m, "GetKey")
    ret0, _ := ret[0].(string)
    return ret0
}

// GetKey indicates an expected call of GetKey.
func (mr *MockSecretGetterInterfaceMockRecorder) GetKey() *gomock.Call {
    mr.mock.ctrl.T.Helper()
    return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockSecretGetterInterface)(nil).GetKey))
}

func NewSecretManagerClient(secretValue string) gokko.GoogleSecretManagerClientInterface {
    return &MockSecretManagerClient{
        Value: secretValue,
    }
}